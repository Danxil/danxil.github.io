{"version":3,"sources":["webpack:///./src/helpers/coordinates.js","webpack:///./src/templates/service/styles.js","webpack:///./src/templates/service/index.js"],"names":["module","exports","averageGeolocation","coords","length","x","y","z","coord","latitude","Math","PI","longitude","cos","sin","total","centralLongitude","atan2","centralSquareRoot","sqrt","container","flexDirection","display","map","position","left","right","top","header","zIndex","width","justifyContent","title","css","MOBILE_DEVICE_LAYOUT_TRASHOLD","titleText","maxWidth","mapOverlay","bottom","backgroundColor","opacity","content","contentSide","rankBlock","servicesBlock","rankLabel","fontSize","rankValue","marginTop","listWrapper","rankListWrapper","listItemWithoutBorder","border","margin","listWithoutBorder","addressBlock","marginBottom","specialtiesBlock","ourRatingTitleStyle","ourRatingValueStyle","textUnderTable","fontWeight","alignSelf","color","ORANGE_COLOR","goBack","ratingValue","itemTitle","stat","GRAY_COLOR","contactBtn","pageQuery","React","memo","props","service","data","services","name","sideServicesRank","fakeReviews","feedbackWithClientsDirection","solveCustomerClaimsPercentage","forumReviewsDirection","points","website","incomplete","specialties","pagePath","useContactForm","onContactServiceCancel","onContactServicePress","contactService","centerPointsCoords","useMemo","averageCoord","filter","coordinates","pointsToRender","onContactServicePressCb","useCallback","reviewsAmount","reduce","prev","o","style","styles","plural","description","address","join","rowColor","LIGHT_GRAY","onClick","block","ghost","type","href","rel","target","phones","workingHours","key","phone","dataSource","renderItem","day","time","Item","mapDayToLabel","from","to","item","window","Map","center","zoom","height","TileLayer","attribution","url","isOpen","Popup","selectedServiceName","undefined","onCancel"],"mappings":"+6BAkCAA,EAAOC,QAAU,CACfC,mBAnCF,SAA4BC,GAC1B,GAAsB,IAAlBA,EAAOC,OACT,OAAOD,EAAO,GAOhB,IAJA,IAIA,EAJIE,EAAI,EACJC,EAAI,EACJC,EAAI,EAER,IAAkBJ,KAAlB,aAA0B,CAAC,IAAlBK,EAAiB,QACpBC,EAAWD,EAAMC,SAAWC,KAAKC,GAAK,IACtCC,EAAYJ,EAAMI,UAAYF,KAAKC,GAAK,IAE5CN,GAAKK,KAAKG,IAAIJ,GAAYC,KAAKG,IAAID,GACnCN,GAAKI,KAAKG,IAAIJ,GAAYC,KAAKI,IAAIF,GACnCL,GAAKG,KAAKI,IAAIL,GAGhB,IAAIM,EAAQZ,EAAOC,OAEnBC,GAAQU,EACRT,GAAQS,EACRR,GAAQQ,EAER,IAAIC,EAAmBN,KAAKO,MAAMX,EAAGD,GACjCa,EAAoBR,KAAKS,KAAKd,EAAIA,EAAIC,EAAIA,GAG9C,MAAO,CACLG,SAA4B,IAHRC,KAAKO,MAAMV,EAAGW,GAGAR,KAAKC,GACvCC,UAA8B,IAAnBI,EAAyBN,KAAKC,O,0PCvB9B,GACbS,UAAW,CACTC,cAAe,SACfC,QAAS,QAEXC,IAAK,CACHC,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,IAAK,GAEPC,OAAQ,CACNJ,SAAU,WACVK,OAAQ,IACRC,MAAO,OACPR,QAAS,OACTS,eAAgB,UAElBC,MAAOC,YAAF,iKASiBC,IATjB,4EAgBLC,UAAW,CACTC,SArCc,KAsCdd,QAAS,gBAEXe,WAAY,CACVb,SAAU,WACVG,IAAK,EACLW,OAAQ,EACRb,KAAM,EACNC,MAAO,EACPa,gBAAiB,QACjBV,OAAQ,IACRW,QAAS,IAEXC,QAASR,YAAF,+BAlDS,KAkDT,8FAOeC,IAPf,+CAYPQ,YAAaT,YAAF,iEAIWC,IAJX,oBAQXS,UAAWV,YAAF,qCAEaC,IAFb,+BAMTU,cAAeX,YAAF,oBACSC,IADT,wBAKbW,UAAW,CACTC,SAAU,QAEZC,UAAW,CACTC,UAAW,GACXF,SAAU,OACVxB,QAAS,SAEX2B,YAAY,CAAD,4DAIXC,gBAAiBjB,YAAF,wCAEOC,IAFP,4BAMfiB,sBAAuB,CAAEC,OAAQ,OAAQC,OAAQ,GACjDC,kBAAkB,CAAD,2CAGjBC,aAAc,CACZC,aAAc,IAEhBC,iBAAkB,CAChBT,UAAW,IAEbU,oBAAqBzB,YAAF,uDAGGC,IAHH,wBAOnByB,oBAAqB1B,YAAF,oDAGGC,IAHH,wBAOnB0B,eAAgB,CACdC,WAAY,OACZzB,SAAU,IACV0B,UAAW,WACXC,MAAOC,KAETC,OAAQhC,YAAF,+FAMgBC,IANhB,qEAaNgC,YAAajC,YAAF,mCAEWC,IAFX,wBAMXiC,UAAU,CAAD,wCAGTC,KAAMnC,YAAF,oBACkBoC,KAEtBC,WAAYrC,YAAF,uCAEYC,IAFZ,+C,yGC+BCqC,GA3KEC,cAAMC,MAAK,SAAiBC,GAAQ,IAErBC,EAAgBD,EAApCE,KAAQC,SAAYF,QAG1BG,EAWEH,EAXFG,KACAC,EAUEJ,EAVFI,iBACAC,EASEL,EATFK,YACAC,EAQEN,EARFM,6BACAC,EAOEP,EAPFO,8BACAC,EAMER,EANFQ,sBACAC,EAKET,EALFS,OACAC,EAIEV,EAJFU,QACAC,EAGEX,EAHFW,WACAC,EAEEZ,EAFFY,YACAC,EACEb,EADFa,SAf8C,EAsB5CC,YAAe,CAAEZ,SAAU,CAACF,KAH9Be,EAnB8C,EAmB9CA,uBACAC,EApB8C,EAoB9CA,sBACAC,EArB8C,EAqB9CA,eAGIC,EAAqBC,mBAAQ,WACjC,IAAMC,EAAe7F,6BAAmBkF,EAAOY,QAAO,qBAAGC,eACtD1E,KAAI,oBAAG0E,YAAH,MAA6C,CAChDxF,SADG,KAEHG,UAFG,UAKP,MAAO,CAACmF,EAAatF,SAAUsF,EAAanF,aAC3C,CAACwE,IAEEc,EAAiBJ,mBAAQ,kBAAMV,EAAOY,QAAO,qBAAGC,iBAAgC,CAACb,IAEjFe,EAA0BC,uBAAY,WAC1CT,EAAsB,CAAEH,eACvB,CAACG,IAEEU,EAAgBtB,EAAiBuB,QAAO,SAACC,EAAMC,GAAP,OAAaD,EAAOC,EAAEH,gBAAe,GAEnF,OACE,mBAAKI,MAAOC,EAAOtF,WACjB,YAAC,IAAD,CACEY,MAAUqE,EAAL,IAAsBM,IAAON,EAAe,QAAS,SAAU,WAA/D,YAAqFvB,EAArF,IACL8B,YAAW,wBAA0B9B,EAA1B,KAAmCoB,EAAe3E,KAAI,SAAAiF,GAAC,OAAIA,EAAEK,WAASC,KAAK,QAExF,kBAAI7E,IAAKyE,EAAO1E,OACd,mBAAKyE,MAAOC,EAAOvE,WAAY2C,IAEjC,mBAAK7C,IAAKyE,EAAOjE,SACf,mBAAKR,IAAG,YAAE,CAACyE,EAAOhE,YAAagE,EAAO/D,aACpC,mBAAKV,IAAG,YAAE,CAACyE,EAAOzD,YAAayD,EAAOxD,mBAElCoC,EACE,iBAAGmB,MAAOC,EAAO9C,gBAAjB,uEACE,KAEN,YAAC,IAAD,CACEoB,YAAaA,EACbC,6BAA8BA,EAC9BC,8BAA+BA,EAC/BC,sBAAuBA,EACvBJ,iBAAkBA,EAClBO,WAAYA,EACZyB,SAAUC,MAEZ,mBAAK/E,IAAKyE,EAAOpC,YACf,iBAAQ2C,QAASd,EAAyBe,OAAK,EAACC,OAAK,EAACC,KAAK,WAA3D,wBAIN,mBAAKnF,IAAG,YAAE,CAACyE,EAAOhE,YAAagE,EAAO9D,iBACpC,uBACE,iBAAGX,IAAKyE,EAAOzC,OAAQoD,KAAK,KAAI,uCAElC,uBAASZ,MAAOC,EAAOnD,cACrB,kBAAItB,IAAKyE,EAAOvC,WAAhB,YACA,uBACE,iBAAGkD,KAAMhC,EAASiC,IAAI,sBAAsBC,OAAO,UAAUlC,KAI/Da,EAAe3E,KAAI,gBACjBsF,EADiB,EACjBA,QACAW,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,aAHiB,OAIb,mBAAKC,IAAKb,GACd,uBAASJ,MAAOC,EAAOnD,cACrB,kBAAItB,IAAKyE,EAAOvC,WAAhB,UACA,uBACG0C,IAGL,uBAASJ,MAAOC,EAAOnD,cACrB,kBAAItB,IAAKyE,EAAOvC,WAAhB,uBACA,uBACGqD,EAAOjG,KAAI,SAAAoG,GAAK,OAAI,mBAAKD,IAAKC,GAAQA,QAIvCF,EAAarH,OACX,uBAASqG,MAAOC,EAAOnD,cACrB,kBAAItB,IAAKyE,EAAOvC,WAAhB,iBACA,uBACE,mBAAKlC,IAAG,YAAE,CAACyE,EAAOzD,YAAayD,EAAOpD,qBACpC,iBACEsE,WAAYH,EACZI,WAAY,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OACV,gBAAMC,KAAN,CAAWvB,MAAOC,EAAOvD,uBACtB8E,YAAcH,GADjB,KACwB,qBAAIC,EAAKxG,KAAI,gBAAG2G,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAAkB,oBAAMT,IAAG,GAAKQ,EAAOC,GAAOD,EAA5B,MAAqCC,cAOpG,KAER,2BAGJ,mBAAK1B,MAAOC,EAAOjD,kBACjB,2BACE,kBAAIxB,IAAKyE,EAAOvC,WAAhB,2BACA,mBAAKlC,IAAKyE,EAAOzD,aACf,iBACE2E,WAAYrC,EACZsC,WAAY,SAAAO,GAAI,OACd,gBAAMJ,KAAN,KACGI,WASjB,mBAAK3B,MAAOC,EAAOnF,KAEG,oBAAX8G,OACL,YAACC,EAAA,EAAD,CAAKC,OAAQ1C,EAAoB2C,KAAwB,IAAlBpD,EAAOhF,OAlJ/B,GACC,GAiJuFqG,MAAO,CAAEgC,OAAQ,MACtH,YAACC,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAGJxD,EAAOY,QAAO,SAAAQ,GAAC,OAAIA,EAAEP,eAAa1E,KAAI,gBAAGsF,EAAH,EAAGA,QAASZ,EAAZ,EAAYA,YAAZ,OACpC,mBAAKyB,IAAKb,GACV,YAAC,IAAD,CACEgC,QAAM,EACNrH,SAAUyE,GAEV,YAAC6C,EAAA,EAAD,KACGhE,EADH,IACS,uBADT,IACiB+B,SAOvB,MAGR,YAAC,IAAD,CAAakC,oBAAqBnD,EAAiBA,EAAed,UAAOkE,EAAWC,SAAUvD,QAK9E","file":"component---src-templates-service-index-js-3729ca15b80d48a2ee31.js","sourcesContent":["function averageGeolocation(coords) {\n  if (coords.length === 1) {\n    return coords[0];\n  }\n\n  let x = 0.0;\n  let y = 0.0;\n  let z = 0.0;\n\n  for (let coord of coords) {\n    let latitude = coord.latitude * Math.PI / 180;\n    let longitude = coord.longitude * Math.PI / 180;\n\n    x += Math.cos(latitude) * Math.cos(longitude);\n    y += Math.cos(latitude) * Math.sin(longitude);\n    z += Math.sin(latitude);\n  }\n\n  let total = coords.length;\n\n  x = x / total;\n  y = y / total;\n  z = z / total;\n\n  let centralLongitude = Math.atan2(y, x);\n  let centralSquareRoot = Math.sqrt(x * x + y * y);\n  let centralLatitude = Math.atan2(z, centralSquareRoot);\n\n  return {\n    latitude: centralLatitude * 180 / Math.PI,\n    longitude: centralLongitude * 180 / Math.PI\n  };\n}\n\nmodule.exports = {\n  averageGeolocation,\n};\n","import { css } from '@emotion/core'\n\nimport { GRAY_COLOR, ORANGE_COLOR } from '../../constants/colors'\nimport { MOBILE_DEVICE_LAYOUT_TRASHOLD } from '../../constants/layout'\n\nconst MAX_WIDTH = 1200;\n\nexport default {\n  container: {\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  map: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n  },\n  header: {\n    position: 'relative',\n    zIndex: 200000,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  title: css`\n    display: inline-block;\n    z-index: 200000;\n    margin-top: 280px;\n    font-size: 50px;\n    text-transform: capitalize;\n    text-align: center;\n    color: black;\n    font-weight: bold;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      font-size: 25px;\n      padding: 0 10px;\n      padding-bottom: 40px;\n      line-height: 30px;\n    }\n  `,\n  titleText: {\n    maxWidth: MAX_WIDTH,\n    display: 'inline-block',\n  },\n  mapOverlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'black',\n    zIndex: 100000,\n    opacity: .2,\n  },\n  content: css`\n    position: relative;\n    max-width: ${MAX_WIDTH}px;\n    display: flex;\n    width: 100%;\n    margin: 100px auto 0;\n    flex-direction: row-reverse;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      flex-direction: column;\n      margin-top: 30px;\n    }\n  `,\n  contentSide: css`\n    flex-direction: column;\n    display: flex;\n    width: 50%;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      width: 100%;\n    }\n  `,\n  rankBlock: css`\n    text-align: right;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      flex-direction: column;\n    }\n  `,\n  servicesBlock: css`\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      padding: 0 20px;\n    }\n  `,\n  rankLabel: {\n    fontSize: '16px',\n  },\n  rankValue: {\n    marginTop: 10,\n    fontSize: '20px',\n    display: 'block'\n  },\n  listWrapper: css`\n    display: flex;\n    flex-direction: column;\n  `,\n  rankListWrapper: css`\n    align-self: flex-end;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      align-self: inherit;\n    }\n  `,\n  listItemWithoutBorder: { border: 'none', margin: 0 },\n  listWithoutBorder: css`\n    margin-bottom: 20;\n  `,\n  addressBlock: {\n    marginBottom: 40,\n  },\n  specialtiesBlock: {\n    marginTop: 20,\n  },\n  ourRatingTitleStyle: css`\n    font-size: 25px;\n    vertical-align: -3px;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      font-size: 13px;\n    }\n  `,\n  ourRatingValueStyle: css`\n    font-size: 25px;\n    font-weight: bold;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      font-size: 18px;\n    }\n  `,\n  textUnderTable: {\n    fontWeight: 'bold',\n    maxWidth: 300,\n    alignSelf: 'flex-end',\n    color: ORANGE_COLOR\n  },\n  goBack: css`\n    margin-bottom: 50px;\n    display: inline-block;\n    position: absolute;\n    top: -70px;\n    left: 0;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      top: -50px;\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n    }\n  `,\n  ratingValue: css`\n    font-size: 15px;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      font-size: 13px;\n    }\n  `,\n  itemTitle: css`\n    font-size: 15px;\n  `,\n  stat: css`\n    background-color: ${GRAY_COLOR}\n  `,\n  contactBtn: css`\n    margin-bottom: 20px;\n    @media(max-width: ${MOBILE_DEVICE_LAYOUT_TRASHOLD}px) {\n      padding-left: 20px;\n      padding-right: 20px;\n    }\n  `\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Button, List } from 'antd'\nimport { Map, TileLayer, Popup } from 'react-leaflet'\n\nimport styles from './styles'\nimport { mapDayToLabel } from '../../helpers/days'\nimport ExtendedMarker from '../../components/extended-marker'\nimport { averageGeolocation } from '../../helpers/coordinates'\nimport ServiceStat from '../../components/service-stat'\nimport { LIGHT_GRAY } from '../../constants/colors'\nimport SEO from '../../components/seo'\nimport plural from \"plural-ru\"\nimport ContactForm from '../../components/contact-form'\nimport useContactForm from '../../hooks/useContactForm'\n\nconst ZOOM_FOR_ONE_POINT = 15;\nconst ZOOM_FOR_FEW_POINTS = 10;\n\nexport default React.memo(function Service(props) {\n\n  const { data: { services: { service } } } = props;\n\n  const  {\n    name,\n    sideServicesRank,\n    fakeReviews,\n    feedbackWithClientsDirection,\n    solveCustomerClaimsPercentage,\n    forumReviewsDirection,\n    points,\n    website,\n    incomplete,\n    specialties,\n    pagePath\n  } = service;\n\n  const {\n    onContactServiceCancel,\n    onContactServicePress,\n    contactService,\n  } = useContactForm({ services: [service] });\n\n  const centerPointsCoords = useMemo(() => {\n    const averageCoord = averageGeolocation(points.filter(({ coordinates }) => coordinates)\n      .map(({ coordinates: [latitude, longitude] }) => ({\n        latitude,\n        longitude,\n      }))\n    );\n    return [averageCoord.latitude, averageCoord.longitude]\n  }, [points]);\n\n  const pointsToRender = useMemo(() => points.filter(({ coordinates }) => coordinates), [points]);\n\n  const onContactServicePressCb = useCallback(() => {\n    onContactServicePress({ pagePath });\n  }, [onContactServicePress]);\n\n  const reviewsAmount = sideServicesRank.reduce((prev, o) => prev + o.reviewsAmount, 0)\n\n  return (\n    <div style={styles.container}>\n      <SEO\n        title={`${reviewsAmount} ${plural(reviewsAmount, 'отзыв', 'отзыва', 'отзывов')} об СТО \"${name}\"`}\n        description={`Киевский автосервис: ${name}. ${pointsToRender.map(o => o.address).join('. ')}`}\n      />\n      <h1 css={styles.title}>\n        <div style={styles.titleText}>{name}</div>\n      </h1>\n      <div css={styles.content}>\n        <div css={[styles.contentSide, styles.rankBlock ]}>\n          <div css={[styles.listWrapper, styles.rankListWrapper]}>\n            {\n              incomplete ? (\n                <p style={styles.textUnderTable}>По данному автосервису нет достаточно информации для точной оценки!</p>\n              ) : null\n            }\n            <ServiceStat\n              fakeReviews={fakeReviews}\n              feedbackWithClientsDirection={feedbackWithClientsDirection}\n              solveCustomerClaimsPercentage={solveCustomerClaimsPercentage}\n              forumReviewsDirection={forumReviewsDirection}\n              sideServicesRank={sideServicesRank}\n              incomplete={incomplete}\n              rowColor={LIGHT_GRAY}\n            />\n            <div css={styles.contactBtn}>\n              <Button onClick={onContactServicePressCb} block ghost type=\"primary\">Записаться на СТО</Button>\n            </div>\n          </div>\n        </div>\n        <div css={[styles.contentSide, styles.servicesBlock]}>\n          <div>\n            <a css={styles.goBack} href=\"/\"><b>К списку СТО</b></a>\n          </div>\n          <section style={styles.addressBlock}>\n            <h2 css={styles.itemTitle}>Вебсайт:</h2>\n            <div>\n              <a href={website} rel=\"noopener noreferrer\" target=\"_blank\">{website}</a>\n            </div>\n          </section>\n          {\n            pointsToRender.map(({\n              address,\n              phones,\n              workingHours,\n            }) => <div key={address}>\n              <section style={styles.addressBlock}>\n                <h2 css={styles.itemTitle}>Адрес:</h2>\n                <div>\n                  {address}\n                </div>\n              </section>\n              <section style={styles.addressBlock}>\n                <h2 css={styles.itemTitle}>Телефоны для связи:</h2>\n                <div>\n                  {phones.map(phone => <div key={phone}>{phone}</div>)}\n                </div>\n              </section>\n                {\n                  workingHours.length ? (\n                    <section style={styles.addressBlock}>\n                      <h2 css={styles.itemTitle}>Время работы:</h2>\n                      <div>\n                        <div css={[styles.listWrapper, styles.listWithoutBorder]}>\n                          <List\n                            dataSource={workingHours}\n                            renderItem={({ day, time }) => (\n                              <List.Item style={styles.listItemWithoutBorder}>\n                                {mapDayToLabel(day)}: <b>{time.map(({ from, to }) => <span key={`${from}${to}`}>{from} - {to}</span>)}</b>\n                              </List.Item>\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </section>\n                  ) : null\n                }\n              <hr/>\n            </div>)\n          }\n          <div style={styles.specialtiesBlock}>\n            <section>\n              <h2 css={styles.itemTitle}>Выполняемые виды работ:</h2>\n              <div css={styles.listWrapper}>\n                <List\n                  dataSource={specialties}\n                  renderItem={item => (\n                    <List.Item>\n                      {item}\n                    </List.Item>\n                  )}\n                />\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n      <div style={styles.map}>\n        {\n          typeof window !== 'undefined' ? (\n            <Map center={centerPointsCoords} zoom={points.length === 1 ? ZOOM_FOR_ONE_POINT : ZOOM_FOR_FEW_POINTS} style={{ height: 250 }}>\n              <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n              {\n                points.filter(o => o.coordinates).map(({ address, coordinates }) => (\n                  <div key={address}>\n                  <ExtendedMarker\n                    isOpen\n                    position={coordinates}\n                  >\n                    <Popup>\n                      {name} <br /> {address}\n                    </Popup>\n                  </ExtendedMarker>\n                  </div>\n                ))\n              }\n            </Map>\n          ) : null\n        }\n      </div>\n      <ContactForm selectedServiceName={contactService ? contactService.name : undefined} onCancel={onContactServiceCancel} />\n    </div>\n  )\n});\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    services {\n      service(query: { pagePath: $path }) {\n        specialized\n        specialties\n        pagePath\n        name\n        description\n        website\n        points {\n          address\n          phones\n          coordinates\n          title\n          workingHours {\n            day\n            time {\n              from\n              to\n            }\n          }\n        }\n        sideServicesRank {\n          name\n          link\n          rank\n          reviewsAmount\n        }\n        fakeReviews\n        feedbackWithClientsDirection\n        solveCustomerClaimsPercentage\n        forumReviewsDirection\n        rank\n        incomplete\n      }\n    }\n  }\n`\n"],"sourceRoot":""}